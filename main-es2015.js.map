{"version":3,"sources":["../ngx-currency-input/src/lib/ngx-currency-input.directive.ts","../ngx-currency-input/src/lib/ngx-currency-input.module.ts","../ngx-currency-input/src/public-api.ts","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Directive, ElementRef, HostListener, forwardRef, Renderer2, Input, Injector, OnInit } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  NgControl,\n  AbstractControl,\n  Validator,\n  ValidationErrors\n} from '@angular/forms';\n\nconst CURRENCYDIRECTIVE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CurrencyInputDirective),\n  multi: true\n};\n\nconst CURRENCYDIRECTIVE_VALIDAT0R: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CurrencyInputDirective),\n  multi: true\n};\n\ninterface ICursorPosition {\n  start: number;\n  end: number;\n}\n\n@Directive({\n  selector:\n    'input[formControlName][ngxCurrencyInput], input[formControl][ngxCurrencyInput], input[ngModel][ngxCurrencyInput]',\n  providers: [DecimalPipe, CURRENCYDIRECTIVE_VALUE_ACCESSOR, CURRENCYDIRECTIVE_VALIDAT0R]\n})\nexport class CurrencyInputDirective implements ControlValueAccessor, Validator, OnInit {\n  @Input() formatOnlyOnBlur = false;\n  @Input() min: number;\n  @Input() max: number;\n\n  private decimalPointSeparator = this.getLocaleDecimalPointSeparator();\n  private thousandsSeparator = this.getLocaleThousandsSeparator();\n\n  private ngControl: NgControl;\n  private numbersAndDecimalPointSeparatorRegex: RegExp;\n  private readonly allowedKeys: string[] = [\n    'Backspace',\n    'Tab',\n    'End',\n    'Home',\n    'Delete',\n    'Del',\n    'Ctrl',\n    'ArrowLeft',\n    'ArrowRight',\n    'Left',\n    'Right'\n  ];\n  private readonly allowedKeysUsedWithControl: string[] = ['x', 'c', 'v', 'a', 'z'];\n  private numberWithUpTo2DecimalsRegex = new RegExp(`^([0-9]+)?(\\\\${this.decimalPointSeparator}[0-9]?[0-9]?)?$`);\n  private previousRawInputValue = '';\n\n  private onChange: (value: string) => void;\n  private onTouch: () => void;\n\n  constructor(\n    private decimalPipe: DecimalPipe,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private injector: Injector\n  ) {\n    const localeDecimalPointSeparator = this.getLocaleDecimalPointSeparator();\n    this.numbersAndDecimalPointSeparatorRegex = new RegExp(`[0-9${localeDecimalPointSeparator}]`, 'g');\n  }\n\n  ngOnInit() {\n    this.ngControl = this.injector.get(NgControl);\n  }\n\n  @HostListener('blur')\n  handleBlur() {\n    this.reformatInput();\n    this.onTouch();\n  }\n\n  @HostListener('input', ['$event.target.value', '$event.target', '$event'])\n  handleInput(rawInputValue: string, inputEl: HTMLInputElement, event: InputEvent) {\n    const enteredData = event.data;\n    if (enteredData === this.decimalPointSeparator && this.hasOnlyOneDecimalSeparatorAtTheEnd(rawInputValue)) {\n      return;\n    }\n    if (rawInputValue === '') {\n      this.onChange('');\n      return;\n    }\n\n    const initialCursorPosition = this.getCursorPosition(inputEl);\n\n    if (this.hasNoMoreThan2DecimalDigits(rawInputValue) && !this.isNumberTooLarge(rawInputValue)) {\n      const newRawInputValue = this.formatOnlyOnBlur ? rawInputValue : this.formatPriceToUpTo2Decimal(rawInputValue);\n      this.previousRawInputValue = newRawInputValue;\n      this.onChange(newRawInputValue);\n      this.setNativeInputValue(newRawInputValue);\n\n      const diffInSeparators = this.getDiffInSeparators(rawInputValue, newRawInputValue);\n      this.moveCursor(inputEl, initialCursorPosition, diffInSeparators);\n    } else if (\n      enteredData?.length === 1 &&\n      enteredData !== this.decimalPointSeparator &&\n      initialCursorPosition.start !== rawInputValue?.length &&\n      initialCursorPosition.end !== rawInputValue?.length &&\n      !this.isNumberTooLarge(rawInputValue)\n    ) {\n      // This section allows to override numbers after decimal point\n      const newRawInputValue = this.replaceAt(this.previousRawInputValue, initialCursorPosition.start - 1, enteredData);\n      this.previousRawInputValue = newRawInputValue;\n      this.onChange(newRawInputValue);\n      this.setNativeInputValue(newRawInputValue);\n      this.moveCursor(inputEl, initialCursorPosition);\n    } else {\n      this.setNativeInputValue(this.previousRawInputValue);\n      const cursorDiff = enteredData ? -enteredData.length : 0;\n      this.moveCursor(inputEl, initialCursorPosition, cursorDiff);\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  keyDownEvent(event: KeyboardEvent) {\n    if (this.isSpecialAllowedKey(event) || this.isNumberKey(event)) {\n      return;\n    }\n\n    event.preventDefault();\n  }\n\n  private isNumberTooLarge(rawInputValue: string): boolean {\n    const value = this.parseLocaleStringToNumber(rawInputValue);\n    return value >= 10000000000000;\n  }\n\n  private replaceAt(originalValue: string, index: number, replacement: string) {\n    return originalValue.substr(0, index) + replacement + originalValue.substr(index + replacement.length);\n  }\n\n  private isNumberKey(event: KeyboardEvent): boolean {\n    return event.key && event.key.length === 1 && !!String(event.key).match(this.numbersAndDecimalPointSeparatorRegex);\n  }\n\n  private isSpecialAllowedKey(event: KeyboardEvent): boolean {\n    return this.allowedKeys.includes(event.key) || this.isAllowedKeyWithControl(event);\n  }\n\n  private isAllowedKeyWithControl(event: KeyboardEvent): boolean {\n    if (event.ctrlKey || event.metaKey) {\n      return (\n        this.allowedKeysUsedWithControl.includes(event.key) ||\n        this.allowedKeysUsedWithControl.map((key) => key.toUpperCase()).includes(event.key)\n      );\n    } else {\n      return false;\n    }\n  }\n\n  private getValueWithoutThousandsSeparator(value: string): string {\n    return value.split(this.thousandsSeparator).join('');\n  }\n\n  private hasNoMoreThan2DecimalDigits(value: string): boolean {\n    const valueWithoutSeparators = this.getValueWithoutThousandsSeparator(value);\n\n    return this.numberWithUpTo2DecimalsRegex.test(valueWithoutSeparators);\n  }\n\n  private reformatInput(value?: number): void {\n    const newValue = value !== undefined ? value : this.ngControl.value;\n\n    if (newValue || newValue === 0) {\n      const with2Decimals = this.formatPriceTo2Decimal(newValue);\n      this.setNativeInputValue(with2Decimals);\n    } else {\n      this.setNativeInputValue('');\n    }\n  }\n\n  private formatPriceTo2Decimal(value: number | string): string {\n    const numberToTransform = (typeof value === 'string' ? this.parseLocaleStringToNumber(value) : value) || 0;\n\n    return this.decimalPipe.transform(numberToTransform, '1.2-2');\n  }\n\n  private formatPriceToUpTo2Decimal(value: string): string {\n    // TODO: potential for refactor:\n    const numberOfZerosAfterDecimalPointRegex = `^[0-9]*\\\\${this.decimalPointSeparator}(0+)$`;\n    const numberOfZerosAfterFirstDecimalDigitRegex = `^[0-9]*\\\\${this.decimalPointSeparator}[1-9](0+)$`;\n\n    const valueWithoutSeparators = this.getValueWithoutThousandsSeparator(value);\n    const numberOfZerosAfterDecimalPoint =\n      valueWithoutSeparators.match(numberOfZerosAfterDecimalPointRegex)?.[1].length || 0;\n    const numberOfZerosAfterFirstDecimalDigit =\n      valueWithoutSeparators.match(numberOfZerosAfterFirstDecimalDigitRegex)?.[1].length || 0;\n\n    const formatted = this.decimalPipe.transform(this.parseLocaleStringToNumber(valueWithoutSeparators), '1.0-2');\n    if (numberOfZerosAfterDecimalPoint > 0) {\n      return formatted + this.decimalPointSeparator + '00'.slice(0, numberOfZerosAfterDecimalPoint);\n    }\n    if (numberOfZerosAfterFirstDecimalDigit > 0) {\n      return formatted + '0';\n    }\n\n    return formatted;\n  }\n\n  private getNumberOfThousandsSeparators(value: string): number {\n    return (value || '').split(this.thousandsSeparator).length - 1;\n  }\n\n  private getDiffInSeparators(oldValue: string, newValue: string): number {\n    const initialNumberOfSeparators = this.getNumberOfThousandsSeparators(oldValue);\n    const currentNumberOfSeparators = this.getNumberOfThousandsSeparators(newValue);\n\n    return currentNumberOfSeparators - initialNumberOfSeparators;\n  }\n\n  private hasOnlyOneDecimalSeparatorAtTheEnd(value: string): boolean {\n    return value.split(this.decimalPointSeparator).length === 2 && value.slice(-1) === this.decimalPointSeparator;\n  }\n\n  private parseLocaleStringToNumber(value: string): number {\n    const cleanPattern = new RegExp(`[^-+0-9${this.decimalPointSeparator}]`, 'g');\n\n    const cleaned = String(value).replace(cleanPattern, '');\n    const normalized = cleaned.replace(this.decimalPointSeparator, '.');\n\n    return parseFloat(normalized);\n  }\n\n  private setNativeInputValue(value: string) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', value);\n  }\n\n  private getNativeInputValue(): string {\n    return this.elementRef.nativeElement.value;\n  }\n\n  private getCursorPosition(inputEl: HTMLInputElement): ICursorPosition {\n    return {\n      start: inputEl.selectionStart,\n      end: inputEl.selectionEnd\n    };\n  }\n\n  private setCursorPosition(inputEl: HTMLInputElement, position: ICursorPosition) {\n    inputEl.setSelectionRange(position.start >= 0 ? position.start : 0, position.end >= 0 ? position.end : 0);\n  }\n\n  private moveCursor(inputEl: HTMLInputElement, initialPosition: ICursorPosition, diff: number = 0): void {\n    this.setCursorPosition(inputEl, {\n      start: initialPosition.start + diff,\n      end: initialPosition.end + diff\n    });\n  }\n\n  private numberOfDecimalPlaces(value: number | string): number {\n    const numString = value + '';\n    return numString.split('.')[1]?.length || 0;\n  }\n\n  private getLocaleDecimalPointSeparator() {\n    const example = this.decimalPipe.transform(1.1, '1.1');\n    return example.charAt(1);\n  }\n\n  private getLocaleThousandsSeparator() {\n    const example = this.decimalPipe.transform(1000, '1.0');\n    if (example.length === 5) {\n      return example.charAt(1);\n    } else {\n      return '';\n    }\n  }\n\n  // Value Acecssor Methods:\n  registerOnChange(fn: (value: number) => void): void {\n    this.onChange = (value: string) => {\n      const valueToEmit = value === '' ? null : this.parseLocaleStringToNumber(value);\n      console.log('Emitting value', valueToEmit);\n      fn(valueToEmit);\n    };\n  }\n\n  registerOnTouched(callbackFunction: () => void): void {\n    this.onTouch = callbackFunction;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  writeValue(value: number): void {\n    // Uncomment that if we want to emit coerced value to max 2 decimal points on write\n    // for ex: setting a value i.e: 24.34335456 (whether should we emit immediately 23.34)\n    // if (this.numberOfDecimalPlaces(normalizedValue) > 2) {\n    //   setTimeout(() => {\n    //     this.onChange(this.formatPriceTo2Decimal(normalizedValue));\n    //   }, 1);\n    // }\n    this.reformatInput(value);\n    this.previousRawInputValue = this.getNativeInputValue();\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    const errors: ValidationErrors = {};\n    if (control.value > this.max) {\n      errors.max = true;\n    }\n    if (control.value < this.min) {\n      errors.min = true;\n    }\n\n    return Object.keys(errors).length === 0 ? null : errors;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CurrencyInputDirective } from './ngx-currency-input.directive';\n\n@NgModule({\n  declarations: [CurrencyInputDirective],\n  imports: [],\n  exports: [CurrencyInputDirective]\n})\nexport class NgxCurrencyInputModule {}\n","/*\n * Public API Surface of ngx-currency-input\n */\n\nexport * from './lib/ngx-currency-input.directive';\nexport * from './lib/ngx-currency-input.module';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ngx-currency-input-demo';\n  value: number;\n}\n","\n<input ngxCurrencyInput [(ngModel)]=\"value\">\n\nCurrency value: {{value}}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { NgxCurrencyInputModule } from '../../../ngx-currency-input/src/public-api';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule, NgxCurrencyInputModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}